"use strict";var _this=void 0;angular.module("app.services",["ngWebSocket"]),angular.module("app.controllers",[]),angular.module("app.directives",[]),angular.module("app.filters",[]),angular.module("app",["ui.router","app.services","app.controllers","app.directives","app.filters"]).run(function($trace,$transitions,$templateCache,$ws){$trace.enable("TRANSITION");var tempaltes=document.querySelectorAll('script[type="text/ng-template"]');angular.forEach(tempaltes,function(template){$templateCache.put(template.id,template.innerHTML)}),$transitions.onBefore({to:"**"},function(transitions){})}).config(function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/");var _when=function(href,controller){$stateProvider.state(href,{url:"/".concat(href),templateUrl:"pages/".concat(href,".html"),controller:"".concat(controller,"Controller")})};_when("index","index"),_when("control","control"),_when("settings/hardware-settings","settingsHardwareSettings"),_when("settings/mqtt-settings","settingsMqttSettings"),_when("settings/ntp-time-settings","settingsNtpTimeSettings"),_when("settings/update","settingsUpdate"),_when("settings/wireless-network","settingsWirelessNetwork")}),angular.module("app.controllers").controller("appController",["$rootScope","$scope","$state","$ws",function($rootScope,$scope,$state,$ws){$scope.$ws=$ws,$ws.config.get(),$rootScope.$on("ws:event:cfg",function(event,json){"index"===$state.$current.name&&$state.go("control")})}]),angular.module("app.controllers").controller("controlController",["$rootScope","$scope","$ws",function($rootScope,$scope,$ws){$scope.$ws=$ws,$scope.uiRange=0,$scope.serverRange=0,$rootScope.$on("ws:event:state",function(event,json){void 0!==json.g1&&($scope.serverRange=json.g1)})}]),angular.module("app.controllers").controller("indexController",function(){}),angular.module("app.directives").directive("ngBalloon",function(){return{link:function($scope,element,attrs){element.attr("data-balloon-length","large").attr("data-balloon-pos","right").attr("data-balloon",attrs.ngBalloon).html('<i class="glyphicon glyphicon-info-sign"></i>')},restrict:"A"}}),angular.module("app.directives").directive("ngDebug",["$rootScope","$ws",function($rootScope,$ws){return{link:function(scope,element,attrs){scope.model={log:"",message:""};var _log=function(log){var dateTime=new Date,line=[[dateTime.getHours(),dateTime.getMinutes(),dateTime.getSeconds()].join(":"),log].join(" - ")+"\n";scope.model.log=line+scope.model.log};scope.send=function(){try{$ws.send(JSON.parse(scope.model.message))}catch(error){_log("error - "+error)}},$rootScope.$on("ws:send",function(event,json){_log("ws:send - "+JSON.stringify(json))}),$rootScope.$on("ws:event",function(event,json){_log("ws:event - "+JSON.stringify(json))});var $textarea=element.find("textarea");element.css({position:"fixed",right:"20px",bottom:0,width:"500px"}),$textarea.css({resize:"none","background-color":"#000",color:"#0f0","font-size":"80%",width:"100%",height:"250px","line-height":"100%"})},restrict:"A",replace:!0,templateUrl:"directives/debug.html",scope:{}}}]),angular.module("app.directives").directive("ngFileInput",["$parse",function($parse){return{link:function($scope,element,attrs){element.bind("change",function(){$parse(attrs.ngFileInput).assign($scope,element[0].files),$scope.$apply()})},restrict:"A"}}]),function(){angular.module("app.directives").directive("ngSidebar",function(){return{link:function(scope,element,attrs){scope.items=viewSidebarBuilder.build()},restrict:"A",replace:!0,templateUrl:"directives/sidebar.html",scope:{}}});var viewSidebar=function(id,title,href){this.id=id,this.title=title,this.href=href||null,this.items=[]};viewSidebar.prototype.addItems=function(items){return angular.forEach(items,function(item){this.push(item)},this.items),this},viewSidebar.prototype.setIcon=function(icon){return this.icon=icon,this},viewSidebar.prototype.addItems=function(items){return angular.forEach(items,function(item){this.push(item)},this.items),this};var viewSidebarBuilder=function(){};viewSidebarBuilder.build=function(){return[new viewSidebar("control","Control","control").setIcon("wrench"),new viewSidebar("settings","Settings").setIcon("cog").addItems([new viewSidebar("wireless-network","Wireless Network","settings/wireless-network").setIcon("signal"),new viewSidebar("hardware-settings","Hardware Settings","settings/hardware-settings").setIcon("wrench"),new viewSidebar("mqtt-settings","MQTT Settings","settings/mqtt-settings").setIcon("cog"),new viewSidebar("ntp-time-settings","NTP (Time) Settings","settings/ntp-time-settings").setIcon("cloud"),new viewSidebar("update","Update","settings/update").setIcon("upload")])]}}(),angular.module("app.directives").directive("ngTop",function(){return{link:function(scope,element,attrs){element.click(function(){angular.element("html, body").stop().animate({scrollTop:0},500,"swing")})},restrict:"A"}}),angular.module("http-notify-interceptor",[]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$notify",function($q,$notify){var interceptor={request:function(config){return config.headers=config.headers||{},config},response:function(response){var config=response.config||{};return config.notify&&config.notify.success&&$notify.success(config.notify.success),response},responseError:function(rejection){var config=rejection.config||{};return config.notify&&(!0===config.notify.error?$notify.serverError():$notify.error(config.notify.error)),$q.reject(rejection)}};return interceptor}])}]),angular.module("http-interceptor",[]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q",function($q){var interceptor={request:function(config){return config.headers=config.headers||{},config},response:function(response){return!0===(response.config||{}).asJson?response.data:response}};return interceptor}])}]),angular.module("app.services").factory("$api",["$http","$config",function($http,$config){var service={update:function(files){var formData=new FormData;return angular.forEach(files,function(file){formData.append("file",file)}),$http.post("http://"+$config.getRemoteHost()+"/update/",formData,{transformRequest:angular.identity,headers:{"Content-Type":void 0}})}};return service}]),angular.module("app.services").factory("$config",function(){var service={getRemoteHost:function(){var hostname=window.location.hostname;return"localhost"===window.location.hostname&&"3000"===window.location.port&&(hostname="192.168.31.50"),hostname}};return service}),angular.module("app.services").factory("$dict",function(){return{}}),angular.module("app.services").factory("$notify",["$timeout",function($timeout){var service={},_notify=function(title,options){if(!window.Notification)return console.log("Web Notification not supported");window.Notification.requestPermission(function(permission){if("granted"===permission){(options=options||{}).body=options.body||"";var notification=new window.Notification(title,options);$timeout(notification.close,3e3)}})};return service.info=_notify,service.warning=_notify,service.success=_notify,service.error=_notify,service.serverError=function(){this.error("An error has occured. Please try again or contact us.")},service}]),angular.module("app.services").factory("$ws",["$rootScope","$websocket","$config",function($rootScope,$websocket,$config){var service={},_config=null,_ws=$websocket("ws://"+$config.getRemoteHost()+"/ws");return _ws.onMessage(function(response){if(!response||!response.data)return console.warn("WS: Empty data");var json={};try{json=JSON.parse(response.data)}catch(error){return console.warn("WS: Can not desiarilize the response",response.data)}if(!json.cmd)return console.warn("WS: Unknown command",json);console.log(json),"cfg"===json.cmd&&(_config=angular.copy(json)),$rootScope.$emit("ws:event",json),$rootScope.$emit("ws:event:"+json.cmd,json)}),service.isReady=function(){return!!_config},service.send=function(json){for(var key in json){var value=json[key];"boolean"==typeof value&&(json[key]=+value)}_ws.send(JSON.stringify(json)),$rootScope.$emit("ws:send",json)},service.ctrl={},service.ctrl.change=function(json){json.cmd="ctrl",service.send(json)},service.wifi={},service.wifi.scan=function(){service.send({cmd:"state",wifi:"scan"})},service.config={},service.config.get=function(){service.send({cmd:"getcfg"})},service.config.network=function(){return _config.network||null},service}]),angular.module("app.controllers").controller("settingsHardwareSettingsController",function(){}),angular.module("app.controllers").controller("settingsMqttSettingsController",function(){}),angular.module("app.controllers").controller("settingsNtpTimeSettingsController",function(){}),angular.module("app.controllers").controller("settingsUpdateController",["$scope","$api",function($scope,$api){$scope.model={},$scope.update=function(){$api.update($scope.files)}}]),function(){angular.module("app.controllers").controller("settingsWirelessNetworkController",["$rootScope","$scope","$ws",function($rootScope,$scope,$ws){$scope.$ws=$ws,$scope.template=null,$scope.autoDisableWifis=[new viewAutoDisableWifi("Always on",null),new viewAutoDisableWifi("3 min",3),new viewAutoDisableWifi("4 min",4),new viewAutoDisableWifi("5 min",5),new viewAutoDisableWifi("10 min",10),new viewAutoDisableWifi("15 min",15),new viewAutoDisableWifi("30 min",30)],$scope.networks=null,$scope.model={wifiMode:"client",accessPoint:{ssid:null,password:null,isHideNetworkName:!1,ipAddress:null,subnetMask:null,autoDisableWifi:$scope.autoDisableWifis[0]},client:{network:null,ssid:null,bssid:null,password:null,isUseDHCP:!0,ipAddress:null,subnetMask:null,dnsServer:null,gateway:null,autoDisableWifi:$scope.autoDisableWifis[0]}},$scope.$watch("model.wifiMode",function(value){$scope.template="pages/settings/wireless-network/"+value+".html"}),$scope.$watch("model.client.network",function(value){$scope.model.client.bssid=(value||{}).bssid||null}),$rootScope.$on("ws:event:cfg",function(event,json){$ws.config.network()}),$rootScope.$on("ws:event:wifi-list",function(event,json){if(json.list&&(json.networks=json.list),void 0!==json.networks){var networks=[];angular.forEach(json.networks,function(item){_this.push(new viewNetwork(item))},networks),$scope.networks=networks,"client"===$scope.model.wifiMode&&($scope.model.client.network=networks.length?networks[0]:null)}})}]);var viewAutoDisableWifi=function(name,value){this.name=name,this.value=value},viewNetwork=function(json){this.ssid=json.ssid,this.bssid=json.bssid,this.rssi=json.rssi,this.name="BSSID: "+this.bssid+", RSSI: "+this.rssi+", Network: "+this.ssid}}();